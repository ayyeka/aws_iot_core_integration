# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SamplesMessage.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import proto.SparseSamples_pb2 as SparseSamples__pb2
import proto.PeriodicSamples_pb2 as PeriodicSamples__pb2
import proto.ChannelType_pb2 as ChannelType__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='SamplesMessage.proto',
  package='akproto1',
  syntax='proto3',
  serialized_pb=_b('\n\x14SamplesMessage.proto\x12\x08\x61kproto1\x1a\x13SparseSamples.proto\x1a\x15PeriodicSamples.proto\x1a\x11\x43hannelType.proto\"[\n\x14\x43hannelTypeAndNumber\x12\x16\n\x0e\x63hannel_number\x18\x01 \x01(\r\x12+\n\x0c\x63hannel_type\x18\x02 \x01(\x0e\x32\x15.akproto1.ChannelType\"\xba\x01\n\x0eSamplesMessage\x12\x39\n\x0ftype_and_number\x18\x02 \x01(\x0b\x32\x1e.akproto1.ChannelTypeAndNumberH\x00\x12-\n\x08periodic\x18\x03 \x01(\x0b\x32\x19.akproto1.PeriodicSamplesH\x01\x12)\n\x06sparse\x18\x04 \x01(\x0b\x32\x17.akproto1.SparseSamplesH\x01\x42\x08\n\x06sourceB\t\n\x07samples\"Y\n\x13SamplesBatchMessage\x12\x11\n\treport_id\x18\x01 \x01(\x03\x12/\n\rsamples_batch\x18\x02 \x03(\x0b\x32\x18.akproto1.SamplesMessageb\x06proto3')
  ,
  dependencies=[SparseSamples__pb2.DESCRIPTOR,PeriodicSamples__pb2.DESCRIPTOR,ChannelType__pb2.DESCRIPTOR,])




_CHANNELTYPEANDNUMBER = _descriptor.Descriptor(
  name='ChannelTypeAndNumber',
  full_name='akproto1.ChannelTypeAndNumber',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_number', full_name='akproto1.ChannelTypeAndNumber.channel_number', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel_type', full_name='akproto1.ChannelTypeAndNumber.channel_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=97,
  serialized_end=188,
)


_SAMPLESMESSAGE = _descriptor.Descriptor(
  name='SamplesMessage',
  full_name='akproto1.SamplesMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type_and_number', full_name='akproto1.SamplesMessage.type_and_number', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='periodic', full_name='akproto1.SamplesMessage.periodic', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sparse', full_name='akproto1.SamplesMessage.sparse', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='source', full_name='akproto1.SamplesMessage.source',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='samples', full_name='akproto1.SamplesMessage.samples',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=191,
  serialized_end=377,
)


_SAMPLESBATCHMESSAGE = _descriptor.Descriptor(
  name='SamplesBatchMessage',
  full_name='akproto1.SamplesBatchMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='report_id', full_name='akproto1.SamplesBatchMessage.report_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='samples_batch', full_name='akproto1.SamplesBatchMessage.samples_batch', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=379,
  serialized_end=468,
)

_CHANNELTYPEANDNUMBER.fields_by_name['channel_type'].enum_type = ChannelType__pb2._CHANNELTYPE
_SAMPLESMESSAGE.fields_by_name['type_and_number'].message_type = _CHANNELTYPEANDNUMBER
_SAMPLESMESSAGE.fields_by_name['periodic'].message_type = PeriodicSamples__pb2._PERIODICSAMPLES
_SAMPLESMESSAGE.fields_by_name['sparse'].message_type = SparseSamples__pb2._SPARSESAMPLES
_SAMPLESMESSAGE.oneofs_by_name['source'].fields.append(
  _SAMPLESMESSAGE.fields_by_name['type_and_number'])
_SAMPLESMESSAGE.fields_by_name['type_and_number'].containing_oneof = _SAMPLESMESSAGE.oneofs_by_name['source']
_SAMPLESMESSAGE.oneofs_by_name['samples'].fields.append(
  _SAMPLESMESSAGE.fields_by_name['periodic'])
_SAMPLESMESSAGE.fields_by_name['periodic'].containing_oneof = _SAMPLESMESSAGE.oneofs_by_name['samples']
_SAMPLESMESSAGE.oneofs_by_name['samples'].fields.append(
  _SAMPLESMESSAGE.fields_by_name['sparse'])
_SAMPLESMESSAGE.fields_by_name['sparse'].containing_oneof = _SAMPLESMESSAGE.oneofs_by_name['samples']
_SAMPLESBATCHMESSAGE.fields_by_name['samples_batch'].message_type = _SAMPLESMESSAGE
DESCRIPTOR.message_types_by_name['ChannelTypeAndNumber'] = _CHANNELTYPEANDNUMBER
DESCRIPTOR.message_types_by_name['SamplesMessage'] = _SAMPLESMESSAGE
DESCRIPTOR.message_types_by_name['SamplesBatchMessage'] = _SAMPLESBATCHMESSAGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ChannelTypeAndNumber = _reflection.GeneratedProtocolMessageType('ChannelTypeAndNumber', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELTYPEANDNUMBER,
  __module__ = 'SamplesMessage_pb2'
  # @@protoc_insertion_point(class_scope:akproto1.ChannelTypeAndNumber)
  ))
_sym_db.RegisterMessage(ChannelTypeAndNumber)

SamplesMessage = _reflection.GeneratedProtocolMessageType('SamplesMessage', (_message.Message,), dict(
  DESCRIPTOR = _SAMPLESMESSAGE,
  __module__ = 'SamplesMessage_pb2'
  # @@protoc_insertion_point(class_scope:akproto1.SamplesMessage)
  ))
_sym_db.RegisterMessage(SamplesMessage)

SamplesBatchMessage = _reflection.GeneratedProtocolMessageType('SamplesBatchMessage', (_message.Message,), dict(
  DESCRIPTOR = _SAMPLESBATCHMESSAGE,
  __module__ = 'SamplesMessage_pb2'
  # @@protoc_insertion_point(class_scope:akproto1.SamplesBatchMessage)
  ))
_sym_db.RegisterMessage(SamplesBatchMessage)


# @@protoc_insertion_point(module_scope)
